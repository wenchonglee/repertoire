datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//-------------------
// Runs
//-------------------
model PlaywrightRuns {
  id           String              @id @default(auto()) @map("_id") @db.ObjectId
  runId        String              @unique
  updatedAt    DateTime            @updatedAt
  startTime    DateTime
  endTime      DateTime?
  status       PlaywrightRunStatus @default(running)
  projects     String[]
  totalShards  Int
  joinedShards Int[]
  version      String
  results      RunResults?
}

enum PlaywrightRunStatus {
  passed
  failed
  timedout
  interrupted
  running // Non-native status
}

type RunResults {
  skipped    Int @default(0)
  expected   Int @default(0)
  unexpected Int @default(0)
  flaky      Int @default(0)
}

//-------------------
// Tests
//-------------------
model PlaywrightTests {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime @updatedAt

  // Attributes on run start
  runId          String
  projectName    String
  fileName       String
  testId         String
  title          String
  groupTitle     String?
  tags           String[]
  titlePath      String[]
  timeout        Int
  annotations    PlaywrightAnnotation[]
  expectedStatus PlaywrightTestStatus

  // Added attributes on test start
  startTime DateTime?
  duration  Int?
  retries   Int?
  outcome   PlaywrightOutcome?

  // Added attributes on test end
  status  PlaywrightTestStatus?
  errors  Error[]
  endTime DateTime?

  @@unique([runId, testId])
}

type PlaywrightAnnotation {
  type        String
  description String?
}

enum PlaywrightOutcome {
  skipped
  expected
  unexpected
  flaky
}

enum PlaywrightTestStatus {
  passed
  failed
  timedOut
  skipped
  interrupted
}

type Error {
  message  String?
  snippet  String?
  stack    String?
  value    String?
  location ErrorLocation?
}

type ErrorLocation {
  column Int
  file   String
  line   Int
}
